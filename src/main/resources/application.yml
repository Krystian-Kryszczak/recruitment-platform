micronaut:
  application:
    name: recruitment-platform
  http:
    services:
      open-ai:
        url: https://api.openai.com
        read-timeout: 60s
  router:
    static-resources:
      default:
        enabled: true
        mapping: /views/**
        paths: classpath:data
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
  security:
    authentication: bearer
    token:
      generator:
#        access-token:
#          expiration: 3600
        refresh-token:
          secret: ${JWT_GENERATOR_SIGNATURE_SECRET}
      jwt:
        signatures:
          secret:
            generator:
              secret: ${JWT_GENERATOR_SIGNATURE_SECRET}
    endpoints:
      login:
        path: /login/{employer,candidate}
    intercept-url-map:
    - pattern: /swagger/**
      access: isAnonymous()
    - pattern: /swagger-ui/**
      access: isAnonymous()
logger.levels.io.micronaut.http.client: DEBUG
mongodb:
  uri: mongodb://${MONGO_HOST:localhost}:${MONGO_PORT:27017}/default
  package-names: krystian.kryszczak.recruitment.model
javamail:
  enabled: true
  authentication:
    username: ${MAILER_ADDRESS}
    password: ${MAILER_ADDRESS_PASSWORD}
  properties:
    mail:
      smtp:
        host: ${MAILER_SMTP_HOST:smtp.gmail.com}
        port: ${MAILER_SMTP_PORT:465}
        ssl:
          enable: true
      pop3:
        host: ${MAILER_POP_HOST:pop.gmail.com}
        port: ${MAILER_POP_PORT:995}
        ssl:
          enable: true
open-ai:
  token: ${OPEN_AI_TOKEN}
  gpt-model: ${$OPEN_AI_GPT_MODEL:gpt-3.5-turbo}
  text-moderation-model: ${$OPEN_AI_TEXT_MODERATION_MODEL:text-moderation-stable}
  transcription-model: ${$OPEN_AI_TRANSCRIPTION_MODEL:whisper-1}
  speech-model: ${$OPEN_AI_SPEECH_MODEL:tts-1}
  speech-voice: ${$OPEN_AI_SPEECH_VOICE:alloy}
  language: pl
  default-timeout: 60s
